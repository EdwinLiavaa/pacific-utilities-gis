'*****************************************************************
'*  Name   : UpdateSU2a
'*  Purpose: Update a post survey MI file that has been processed
'*				and saved in the format MT-yyyymmdda-GPnn-FIN
'*
'*				1. Upshift column names
'*				2. Reset datatypes
'*				3. Populate columns 
'*
'*  Inputs : User defined table
'*  Outputs: Filename with full path, filename, type of object, valid flag
'*  Author : Edwin Liava'a
'*  Date   : 13-Feb-2007
'*  Mods   : 15-Feb-2007
'*           
'*****************************************************************

Include "PPL_Lib.def"
Include "mapbasic.def"
Include "menu.def"

Declare Sub UpdateSU2a (s_filename_with_path As String, s_filename As String,
							s_objtype As String, ivalid As Integer)

Global db_conn_path As String	'	Access
Global rs_path As String	'	MapInfo Raster Layers (BackDrops)
Global vt_Path As String	'	MapInfo Vector Layers
Global db_name As String	'	MIS database

Sub UpdateSU2a (s_filename_with_path As String, s_filename As String,
					s_objtype As String, ivalid As Integer)

OnError Goto Err_Manage

'	+++++++++++++++ declarations +++++++++++++++

	Dim tableOBJ As Alias
	Dim i, icol_count, icol_match, irow, irow_symbol, myfound as Integer
	Dim more As Logical
	Dim myOBJ As Object
	Dim i_col_type As SmallInt
	Dim s_col_name As String
	Dim alter_col_name As String
	Dim mycolname, mycolnamenew as String
	Dim s_col_name_array() As String
'	Dim s_filename As String
'	Dim s_filename_with_path As String
	Dim s_gpsid As String
'	Dim s_objtype As String
	Dim s_result As String
	Dim s_status As String
	Dim	 s_surveyid as String
	Dim s_tablename As String
	Dim newsymbolstyle As Symbol

'	+++++++++++++++ initialise +++++++++++++++

	ivalid = 1
	more = Ask("  Process a single post survey table:" + chr$(10) +
				"  with format xx-yyyymmdda-GPnn-FIN" + chr$(10) +
				"  Update symbols" + chr$(10) +
				"  Alter columns" + chr$(10) +
				"  Save table as INP" + chr$(10) +
				"  Detete source table" + chr$(10) +
				"  Upload to Access" + chr$(10) + chr$(10) +			 
				"  Warning - OK will close any open tables." + chr$(10) + 
				"  Do you want to continue?", "OK", "Cancel")

	If more Then
	Else
		ivalid = 0
		Exit Sub
	End if
 
	Close All Interactive

	' FileOpenDlg( path, filename, filetype, prompt )
	s_filename_with_path = FileOpenDlg("","","TAB","Open Table")

'	+++++++++++++++ exit if cancel +++++++++++++++

	If s_filename_with_path = "" Then
		ivalid = 0
		Exit Sub
	End If

'	+++++++++++++++ extract info from filename +++++++++++++++

	For i = Len(s_filename_with_path) To 1 Step -1
		' Print Mid$(s_filename_with_path, i, 1)
		If Mid$(s_filename_with_path, i, 1) = "\" Then 
			Exit For
		End If
	Next
	' Print "Exit For loop with i = " + i

	s_filename = Mid$(s_filename_with_path, i + 1, Len(s_filename_with_path) - i - 4) ' dont need .TAB extension
	s_objtype  = UCase$(Mid$(s_filename, 1, 2))
	s_surveyid = UCase$(Mid$(s_filename, 4, 9))
	s_gpsid    = UCase$(Mid$(s_filename, 14, 4))
	s_status   = UCase$(Mid$(s_filename, 19, 3))

	Print "Filename: " + s_filename
	Print "Object type: " + s_objtype
	Print "Survey ID: " + s_surveyid
	Print "GPS ID: " + s_gpsid
	Print "Status: " + s_status

	If s_status <> "FIN" Then
		Note "Invalid table name: " + s_filename
		Print "Invalid table name: " + s_filename
		ivalid = 0
		Exit Sub
	End If

UpdateSU2a:
	Exit Sub
	' The Exit Sub prevents the program from
	' unintentionally executing the error handlers
Err_Manage:
	Note "Error: " + str$(err()) + ", " + error$()
	Resume UpdateSU2a
End Sub