'*****************************************************************
'*  Name   : Find_NoConnectPL
'*  Purpose: Find Poles with no LN_HV or LN_HV Connections  
'*  Inputs : LN_HV, LN_LV, PL
'*  Outputs: 
'*  Author : Leslie Allinson, Edwin Liava'a
'*  Date   : 16-Feb-2007
'*  Mods   : 09-Feb-2007
'*           
'*****************************************************************

Include "mapbasic.def"
Include "menu.def"

Declare Sub Main

Dim a_col_name1, a_col_name2, a_col_name3, a_col_name4, a_col_name5 As Alias
Dim ifound, ifoundflag, ilen, irow1, irow2, irow3 As Integer
Dim more As Logical
Dim db_conn_path, frontPath, vt_Path As String
Dim s_col_name1, s_col_name2, s_col_name3, s_table1, s_table2, s_table3 As String

Sub Main

OnError Goto Err_Manage

'	+++++++++++++++ declarations +++++++++++++++



'	+++++++++++++++ initialise +++++++++++++++

	Print Chr$(12)
	Print "Start Test_NoConnectMT"

	frontPath = ApplicationDirectory$()		' get directory where this MapBasic program located
	ilen = len(frontPath)
	frontPath = mid$(frontpath, 1, ilen - 10)	' remove trailing string "\mapbasic\"

	db_conn_path = frontPath + "\access"
	vt_Path = frontPath + "\mapinfo"

	s_table1 = "PL"
	s_table2 = "LN_LV"
	s_table3 = "LN_HV"

	Print "db_conn_path: " + db_conn_path
	Print "vt_Path: " + vt_Path

'	+++++++++++++++ decision time +++++++++++++++

	more = Ask("  Find " + s_table1 + " with no LN_LV or LN_HV" + Chr$(10) +
				" connection:" + Chr$(10) +
				"  this could take upto 2 minutes to run" + Chr$(10) + Chr$(10) +		 
				"  Do you want to continue?", "OK", "Cancel")
	If more Then
	Else
		Exit Sub
	End if

'	+++++++++++++++ process +++++++++++++++

	Close All Interactive

	Open Table db_conn_path + "\" + s_table1 Interactive
	Map From s_table1
	Open Table db_conn_path + "\" + s_table2 Interactive
	Add Map Auto Layer s_table2
	Open Table db_conn_path + "\" + s_table3 Interactive
	Add Map Auto Layer s_table3

	s_col_name1 = "PL_ID"
	s_col_name2 = "FROM_ID"
	s_col_name3 = "NEXT_ID"

	a_col_name1 = s_table1 + "." + s_col_name1
	a_col_name2 = s_table2 + "." + s_col_name2
	a_col_name3 = s_table2 + "." + s_col_name3
	a_col_name4 = s_table3 + "." + s_col_name2
	a_col_name5 = s_table3 + "." + s_col_name3

	irow1 = 1
	Fetch First from s_table1
	Do While Not EOT(s_table1) And irow1 <= 1000
		'Print "s_table1: " + s_table1 + " irow1: " + irow1 + " " + s_col_name1 + ": " + a_col_name1

		' check LN_HV table first

		ifoundflag = 0
		irow3 = 1
		Fetch First from s_table3
		Do While Not EOT(s_table3) And ifoundflag = 0
			'Print "s_table3: " + s_table3 + " irow3: " + irow3 + " " + s_col_name3 + ": " + a_col_name3
			If a_col_name1 = a_col_name4 Or a_col_name1 = a_col_name5 Then
				ifoundflag = 1
			End If
			Fetch Next From s_table3
			irow3 = irow3 + 1
		Loop
		irow3 = irow3 - 1	'	we exit after row has been incremented

		If ifoundflag = 0 Then

		' not found in LN_HV check in LN_LV

			irow2 = 1
			Fetch First from s_table2
			Do While Not EOT(s_table2) And ifoundflag = 0
				'Print "s_table2: " + s_table2 + " irow2: " + irow2 + " " + s_col_name2 + ": " + a_col_name3
				If a_col_name1 = a_col_name2 Or a_col_name1 = a_col_name3 Then
					ifoundflag = 1
				End If
				Fetch Next From s_table2
				irow2 = irow2 + 1
			Loop
			irow2 = irow2 - 1	'	we exit after row has been incremented
			If ifoundflag = 0 Then
				Print s_table1 + " with no LN_HV or LN_LV: " + a_col_name1
			Else 
				ifound = ifound + 1				
			End If
		Else
			ifound = ifound + 1
		End If
		Fetch Next From s_table1
		irow1 = irow1 + 1
	Loop
	irow1 = irow1 - 1		'	we exit after row has been incremented
	Note  "Table " + s_table1 + " rows " + irow1 + " Not found " + (irow1 - ifound)
	Print "Table " + s_table1 + " rows " + irow1 + " Not found " + (irow1 - ifound)
	Close All Interactive
	Note  "Closed: " + s_table1 + ", " + s_table2 + ", " + s_table3
	Print "Closed: " + s_table1 + ", " + s_table2 + ", " + s_table3

Main:
	Exit Sub
	' The Exit Sub prevents the program from
	' unintentionally executing the error handlers
Err_Manage:
	Note "Error: " + str$(err()) + ", " + error$()
	Resume Main
End Sub