'*****************************************************************
'*  Name   : UpdateSU2
'*  Purpose: Populate Access from post processed survey data
'*
'*				1. Open a post survey MI file that has been optionally 
'*					processed in Excel where it is necessary to find
'*					meter numbers and customers when object type is MT
'*					Check for valid file name where valid name are:
'*					xx-yyyymmdda-GPnn-FIN
'*
'*				2. Final process and save file as xx-yyyymmedda-GPnn-INP 
'*					and delete source
'*
'*				3. Populate Access
'*
'*  Inputs : User defined table
'*  Outputs: 
'*  Author : Leslie Allinson, Edwin Liava'a
'*  Date   : 13-Feb-2007
'*  Mods   : 15-Feb-2007
'*           
'*****************************************************************

Include "Atlantis_Lib.def"
Include "mapbasic.def"
Include "menu.def"

Declare Sub UpdateSU2
Declare Sub UpdateSU2a (s_filename_with_path As String, s_filename As String,
							s_objtype As String, ivalid As Integer)
Declare Sub UpdateSU2b (s_filename_with_path As String, s_filename As String,
							s_objtype As String, ivalid As Integer)
Declare Sub UpdateSU2c (s_filename_with_path As String, s_filename As String,
							s_objtype As String, ivalid As Integer)

Global db_conn_path As String	'	Access
Global rs_path As String	'	MapInfo Raster Layers (BackDrops)
Global vt_Path As String	'	MapInfo Vector Layers
Global db_name As String	'	MIS database

Sub UpdateSU2

OnError Goto Err_Manage

'	+++++++++++++++ declarations +++++++++++++++

	Dim tableOBJ As Alias
	Dim i, icol_count, icol_match, irow, irow_symbol, ivalid, myfound As Integer
	Dim more As Logical
	Dim myOBJ As Object
	Dim i_col_type As SmallInt
	Dim s_col_name As String
	Dim alter_col_name As String
	Dim mycolname, mycolnamenew as String
	Dim s_col_name_array() As String
	Dim s_filename As String
	Dim s_filename_with_path As String
	Dim s_gpsid As String
	Dim s_objtype As String
	Dim s_status As String
	Dim	 s_surveyid as String
	Dim s_tablename As String
	Dim newsymbolstyle As Symbol

'	+++++++++++++++ initialise +++++++++++++++

	Set ProgressBars Off

'	+++++++++++++++ get filename that is prepended with full path +++++++++++++++

	Print chr$(12)
	Print "Start UpdateSU2"
	Print "Call Subroutine UpdateSU2a ++++++++++"

	Call UpdateSU2a (s_filename_with_path, s_filename, s_objtype, ivalid)

'	Print "Return Subroutine UpdateSU2a ++++++++++"
'	Print "Full path and filename: " + s_filename_with_path
'	Print "Filename: " + s_filename	
'	Print "Object Type: " + s_objtype
'	Print "Valid: " + ivalid

	If ivalid = 0 Then
		Close All
		Exit Sub
	End If

'	+++++++++++++++ process table and save +++++++++++++++

	Print "Call Subroutine UpdateSU2b ++++++++++"

	Call UpdateSU2b (s_filename_with_path, s_filename, s_objtype, ivalid)

'	Print "Return Subroutine UpdateSU2b ++++++++++"
'	Print "Full path and filename: " + s_filename_with_path
'	Print "Filename: " + s_filename	
'	Print "Object Type: " + s_objtype
'	Print "Valid: " + ivalid

	If ivalid = 0 Then
		Close All
		Exit Sub
	End If

'	+++++++++++++++ populate AC table +++++++++++++++

	Print "Call Subroutine UpdateSU2c ++++++++++"

	Call UpdateSU2c (s_filename_with_path, s_filename, s_objtype, ivalid)

'	Print "Return Subroutine UpdateSU2c ++++++++++"
'	Print "Full path and filename: " + s_filename_with_path
'	Print "Filename: " + s_filename	
'	Print "Object Type: " + s_objtype
'	Print "Valid: " + ivalid

	If ivalid = 0 Then
		Close All
		Exit Sub
	End If

'	+++++++++++++++ clean up +++++++++++++++

	Set ProgressBars On
	Print "Finished"
	Note "Finished"

UpdateSU2:
	Exit Sub
	' The Exit Sub prevents the program from
	' unintentionally executing the error handlers
Err_Manage:
	Note "Error: " + str$(err()) + ", " + error$()
	Resume UpdateSU2
End Sub